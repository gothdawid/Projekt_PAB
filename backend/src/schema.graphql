type Mutation {
  createGroup(input: CreateGroupInput!): Group!
  createUser(input: CreateUsersInput!): User!
  createSubject(input: CreateSubjectInput!): Subject!
  createRoom(input: CreateRoomInput!): Room!
  addStudentGrade(input: AddUserGradeInput!): User!
  addGroupSchedule(input: AddGroupScheduleInput!): Schedule!
  login(input: LoginInput!): LoginResponse!
  sendMessage(input: CreateMessageInput!): Message!
  deleteMessage(id: ID!): Boolean!
  updateMyAccount(input: UpdateAccountInput!): User!
}

type LoginResponse {
  token: String!
  user: User!
}

type Query {
  allUsers: [User!]!
  allGroups: [Group!]!
  allMessages: [Message!]!
  allSubjects: [Subject!]!
  allSchedules: [Schedule!]!
  allGrades: [Grade!]!
  allRooms: [Room!]!
  allTeachers: [User!]!
  allStudents: [User!]!
  SchedulesByGroup(group_id: ID!): [Schedule!]!
  SchedulesByTeacher(teacher_id: ID!): [Schedule!]!
  SchedulesByRoom(room_id: ID!): [Schedule!]!
  SchedulesBySubject(subject_id: ID!): [Schedule!]!
  MyGrades: [Grade!]!
  getMySentMessages: [Message!]!
  getMyReceivedMessages: [Message!]!
  getAllMyMessages: [Message!]!
  getMyAccount: User!
}

type User {
  id: ID!
  first_name: String!
  last_name: String!
  address: String!
  city: String!
  group_id: ID!
  avatar: String
  Group: Group!
  createdAt: DateTime!
  updatedAt: DateTime!
  Sent: [Message!]!
  Received: [Message!]!
  isTeacher: Boolean!
  Subjects: [Subject!]!
  Grades: [Grade!]!
  password: String!
}

type Group {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  Schedule: [Schedule!]!
  Students: [User!]!
}

type Message {
  id: ID!
  text: String!
  sender_id: ID!
  Sender: User!
  receiver_id: ID!
  Receiver: User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Subject {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  teacher_id: ID!
  Teacher: User!
  Schedule: [Schedule!]!
  Grade: [Grade!]!
}

type Schedule {
  id: ID!
  day: Int!
  time: DateTime!
  subject_id: ID!
  Subject: Subject!
  group_id: ID!
  Group: Group!
  room_id: ID!
  Room: Room!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Grade {
  id: ID!
  grade: Int!
  student_id: ID!
  Student: User!
  subject_id: ID!
  Subject: Subject!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Room {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  Schedule: [Schedule!]!
}

input CreateGroupInput {
  name: String!
}

input CreateUsersInput {
  first_name: String!
  last_name: String!
  address: String!
  city: String!
  group_id: ID!
  isTeacher: Boolean!
}

input CreateSubjectInput {
  name: String!
  teacher_id: ID!
}

input AddUserGradeInput {
  grade: Int!
  student_id: ID!
  subject_id: ID!
}

input AddGroupScheduleInput {
  day: Int!
  time: DateTime!
  subject_id: ID!
  group_id: ID!
  room_id: ID!
}

input CreateRoomInput {
  name: String!
}

input LoginInput {
  id: Int!
  password: String!
}

input CreateMessageInput {
  text: String!
  receiver_id: ID!
}

input UpdateAccountInput {
  city: String
  address: String
  avatar: String
}

scalar DateTime
