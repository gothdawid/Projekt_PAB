type Mutation {
    createGroup(input: CreateGroupInput!): Group!
    createMessage(input: CreateMessageInput!): Message!
    createUser(input: CreateUsersInput!): User!
    createSubject(input: CreateSubjectInput!): Subject!
    createRoom(input: CreateRoomInput!): Room!
    addStudentGrade(input: AddUserGradeInput!): User!
    addGroupSchedule(input: AddGroupScheduleInput!): Schedule!
}


type Query {
    allUsers: [User!]!
    allGroups: [Group!]!
    allMessages: [Message!]!
    allSubjects: [Subject!]!
    allSchedules: [Schedule!]!
    allGrades: [Grade!]!
    allRooms: [Room!]!
    allTeachers: [User!]!
    allStudents: [User!]!
    SchedulesByGroup(group_id: ID!): [Schedule!]!
    SchedulesByTeacher(teacher_id: ID!): [Schedule!]!
    SchedulesByRoom(room_id: ID!): [Schedule!]!
    SchedulesBySubject(subject_id: ID!): [Schedule!]!
}

type User {
    id: ID!
    first_name: String!
    last_name: String!
    address: String!
    city: String!
    group_id: ID!
    Group: Group!
    createdAt: DateTime!
    updatedAt: DateTime!
    Sent: [Message!]!
    Received: [Message!]!
    isTeacher: Boolean!
    Subjects: [Subject!]!
    Grades: [Grade!]!
}

type Group {
    id: ID!
    name: String!
    createdAt: DateTime!
    updatedAt: DateTime!
    Schedule: [Schedule!]!
    Students: [User!]!
}

type Message {
    id: ID!
    text: String!
    sender_id: ID!
    Sender: User!
    receiver_id: ID!
    Receiver: User!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type Subject {
    id: ID!
    name: String!
    createdAt: DateTime!
    updatedAt: DateTime!
    teacher_id: ID!
    Teacher: User!
    Schedule: [Schedule!]!
    Grade: [Grade!]!
}

type Schedule {
    id: ID!
    day: Int!
    time: DateTime!
    subject_id: ID!
    Subject: Subject!
    group_id: ID!
    Group: Group!
    room_id: ID!
    Room: Room!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type Grade {
    id: ID!
    grade: Int!
    student_id: ID!
    Student: User!
    subject_id: ID!
    Subject: Subject!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type Room {
    id: ID!
    name: String!
    createdAt: DateTime!
    updatedAt: DateTime!
    Schedule: [Schedule!]!
}

input CreateGroupInput {
    name: String!
}

input CreateMessageInput {
    text: String!
    sender_id: ID!
    receiver_id: ID!
}

input CreateUsersInput {
    first_name: String!
    last_name: String!
    address: String!
    city: String!
    group_id: ID!
    isTeacher: Boolean!
}

input CreateSubjectInput {
    name: String!
    teacher_id: ID!
}

input AddUserGradeInput {
    grade: Int!
    student_id: ID!
    subject_id: ID!
}

input AddGroupScheduleInput {
    day: Int!
    time: DateTime!
    subject_id: ID!
    group_id: ID!
    room_id: ID!
}

input CreateRoomInput {
    name: String!
}

scalar DateTime
